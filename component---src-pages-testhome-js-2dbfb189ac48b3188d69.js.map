{"version":3,"sources":["webpack://nw-idolfest-website/./src/components/ImageCarousel.js","webpack://nw-idolfest-website/./src/pages/testhome.js"],"names":["useStyles","makeStyles","theme","carouselSlider","width","maxWidth","height","position","overflow","carouselSlide","transition","textAlign","objectFit","btn","padding","border","borderRadius","zIndex","cursor","backgroundColor","palette","light_pink","fontSize","lineHeight","transform","dark_pink","btnPrev","top","left","btnNext","right","props","classes","sliderRef","createRef","useState","currentSlide","updateSlide","hasInitialized","setInitialized","useEffect","current","querySelectorAll","forEach","slide","idx","style","document","goNext","useCallback","console","info","images","length","goPrev","imageFiles","className","ref","map","img","animationDuration","key","relativePath","G","image","childImageSharp","gatsbyImageData","placeholder","alt","onClick","introWrapper","introText","opacity","introLine","carouselHolder","margin","display","placeItems","marginBottom","buttonHolder","flexWrap","flexGrow","flexBasis","marginTop","useStaticQuery","nodes","title","PageHeader","PageContent","Button","variant","href","NewsletterSignup"],"mappings":"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","file":"component---src-pages-testhome-js-2dbfb189ac48b3188d69.js","sourcesContent":["import React, {useEffect, useState, useCallback, createRef} from  'react'\nimport { makeStyles } from '@material-ui/styles'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst useStyles = makeStyles(theme => ({\n  carouselSlider: {\n    width: \"100%\",\n    maxWidth: \"800px\",\n    height: \"400px\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n  carouselSlide: {\n    width: \"100%\",\n    maxWidth: \"800px\",\n    height: \"400px\",\n    position: \"absolute\",\n    transition: \"all 0.5s\",\n    textAlign: \"center\",\n\n    '& > div': {\n      height: \"100%\",\n      objectFit: \"cover\"\n    }\n  },\n  btn: {\n    position: \"absolute\",\n    width: \"40px\",\n    height: \"40px\",\n    padding: \"10px\",\n    border: \"none\",\n    borderRadius: \"50%\",\n    zIndex: 10,\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.light_pink,\n    fontSize: \"18px\",\n    lineHeight: \"18px\",\n\n    '&:active': {\n      transform: \"scale(1.1)\",\n      backgroundColor: theme.palette.dark_pink\n    }\n  },\n  btnPrev: {\n    top: \"45%\",\n    left: \"2%\"\n  },\n  btnNext: {\n    top: \"45%\",\n    right: \"2%\"\n  }\n}))\n\n\nconst ImageCarousel = (props) => {\n  const classes = useStyles()\n  const sliderRef = createRef()\n  const [currentSlide, updateSlide] = useState(0)\n  const [hasInitialized, setInitialized] = useState(false)\n  \n  useEffect(() => {\n    if (!hasInitialized) { \n      setInitialized(true)\n      const slides = document.querySelectorAll(`.${classes.carouselSlide}`)\n      slides.forEach((slide, idx) => {\n        slide.style.transform = `translateX(${idx * 100}%)`\n      })\n    } else {\n\n      const slides = sliderRef.current.querySelectorAll(`.${classes.carouselSlide}`)\n      slides.forEach((slide, idx) => {\n        slide.style.transform = `translateX(${100 * (idx - currentSlide)}%)`\n      })\n    }\n  }, [hasInitialized, setInitialized, classes, currentSlide, sliderRef])\n\n  const goNext = useCallback(() => {\n    console.info('next', currentSlide, props.images, updateSlide)\n    if (currentSlide < props.images.length) {\n      updateSlide(currentSlide + 1)\n    } else {\n      updateSlide(0);\n    }\n  }, [currentSlide, updateSlide, props])\n\n  const goPrev = useCallback(() => {\n    console.info('prev', currentSlide, props.images, updateSlide)\n\n    if (currentSlide > 0) {\n      updateSlide(currentSlide - 1)\n    } else {\n      updateSlide(props.images.length - 1);\n    }\n  }, [currentSlide, updateSlide, props])\n\n\n  const imageFiles = props.images;\n  return (\n      <div className={`${classes.carouselSlider}`} ref={sliderRef}>\n          {imageFiles.map(img => \n            <div className={`${classes.carouselSlide}`} style={{animationDuration: props.animationDuration}} key={img.relativePath}>\n              <GatsbyImage image={img.childImageSharp.gatsbyImageData} placeholder=\"blurred\" alt=\"Prior event\" />\n            </div>)}\n        <button className={`${classes.btn} ${classes.btnNext}`} onClick={goNext}>&gt;</button>\n        <button className={`${classes.btn} ${classes.btnPrev}`} onClick={goPrev}>&lt;</button>\n      </div>\n  )\n}\n\nexport default ImageCarousel\n","import React from  'react'\nimport Layout from '@components/layout'\nimport Seo from '@components/seo'\nimport PageContent from '@components/PageContent'\nimport NewsletterSignup from '@components/NewsletterSignup'\nimport PageHeader from '@components/PageHeader'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { makeStyles, Button } from '@material-ui/core'\nimport ImageCarousel from \"../components/ImageCarousel\"\n\nconst useStyles = makeStyles(theme => ({\n  introWrapper: {\n    position: \"relative\"\n  },\n  introText: {\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"5px\",\n    opacity: \"0.85\",\n    top: \"calc(50% - 8px)\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"4px 16px\",\n    textAlign: \"center\"\n  },\n  introLine: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    height: \"4px\"\n  },\n  carouselHolder: {\n    margin: \"auto\",\n    display: \"grid\",\n    placeItems: \"center\",\n    marginBottom: \"24px\",\n  },\n  buttonHolder: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > a\": {\n      flexGrow: 1,\n      margin: \"4px 32px\",\n      width: \"200px\",\n      flexBasis: \"200px\",\n      marginTop: \"24px\",\n      textAlign: \"center\"\n    }\n  }\n}))\n\n\nconst IndexPage = () => {\n  const classes = useStyles()\n\n  const query = useStaticQuery(graphql`\n  query { \n    images: allFile (filter: {sourceInstanceName: {eq: \"images\"}, relativePath: {glob: \"public-photo-carousel/*.jpg\"}}) {\n      nodes {\n        relativePath\n        childImageSharp {\n          gatsbyImageData(\n            height: 400\n          )\n        }\n      }\n    }\n  }`)\n  \n  const imageFiles = query.images.nodes;\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n\n      <PageHeader \n        title=\"Announcing NW IdolFest 2023!\" \n      />\n\n      <PageContent>\n        <div className={classes.carouselHolder}>\n          <ImageCarousel images={imageFiles} />\n        </div>\n        <p>Get ready for NW IdolFest 2023!</p><br />\n        <p>We've recently opened applications for vendors, performers, and our Northern Lights concert! Click the links below to apply!</p>\n        <div className={classes.buttonHolder}>\n          <Button variant=\"contained\" className=\"cta\" href='https://idolfe.st/vendorapp'>Apply as a Vendor</Button>\n          <Button variant=\"contained\" className=\"cta\" href='http://idolfe.st/panelapp'>Apply as a Panelist or Performer</Button>\n          <Button variant=\"contained\" className=\"cta\" href='https://idolfe.st/nlapp'>Apply for a Northern Lights performance</Button>\n        </div>\n        <br />\n        <br />\n        <p>Sign up for our email list below to get notifications for future announcements.</p>\n        <NewsletterSignup />\n      </PageContent>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}