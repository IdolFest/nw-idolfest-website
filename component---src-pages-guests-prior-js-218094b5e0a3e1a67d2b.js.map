{"version":3,"sources":["webpack://nw-idolfest-website/./src/pages/guests/prior.js"],"names":["guestsByYear","useStaticQuery","allMdx","nodes","filter","a","frontmatter","template","reduce","prev","curr","thisYear","slug","split","theYear","findIndex","year","niceName","name","push","guests","reverse","title","map","key","container","style","justifyContent","guest","personName","showLink"],"mappings":"mOAiEA,UAtDwB,WAEpB,IAkBMA,GAlBOC,oBAAe,cAkBFC,OAAOC,MAAMC,QAAO,SAAAC,GAAC,YAAiC,WAA7BA,SAAA,UAAAA,EAAGC,mBAAH,eAAgBC,SAApB,IAA0CC,QAAO,SAACC,EAAMC,GACnG,IAAMC,EAAWD,EAAKE,KAAKC,MAAM,KAAK,GAClCC,EAAUL,EAAKM,WAAU,SAAAC,GAAI,OAAIA,EAAKA,OAASL,CAAlB,IAC3BM,EAAWP,EAAKJ,YAAYY,KAMlC,OALiB,IAAbJ,EACAA,EAAUL,EAAKU,KAAK,CAACH,KAAML,EAAUS,OAAQ,CAACH,KAE9CR,EAAKK,GAASM,OAAOD,KAAKF,GAEvBR,CACV,GAAE,IAAIY,UAEP,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKC,MAAM,iBAEX,gBAAC,IAAD,CACIA,MAAM,iBAGV,gBAAC,IAAD,KACStB,EAAauB,KAAI,SAAAP,GAAI,OAAK,uBAAKQ,IAAKR,EAAKA,MACtC,0BAAI,gBAAC,IAAD,UAAgBA,EAAKA,KAArB,OACJ,gBAAC,IAAD,CAAMS,WAAS,EAACC,MAAO,CAAEC,eAAgB,iBACpCX,EAAKI,OAAOG,KAAI,SAAAK,GAAK,OAAK,gBAAC,IAAD,CAAQJ,IAAKI,EAAOC,WAAYD,EAAOZ,KAAMA,EAAKA,KAAMc,UAAU,GAAvE,KAE1B,2BACA,2BANkB,KAWzC,C","file":"component---src-pages-guests-prior-js-218094b5e0a3e1a67d2b.js","sourcesContent":["import * as React from \"react\"\nimport Layout from '@components/layout'\nimport Seo from '@components/seo'\nimport PageContent from '@components/PageContent'\nimport PageHeader from '@components/PageHeader'\nimport Avatar from '@components/avatar'\nimport CenteredBox from '@components/CenteredBox'\nimport Grid from '@material-ui/core/Grid'\n\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst PriorGuestsPage = () => {\n    \n    const data = useStaticQuery(\n        graphql`\n        {\n            allMdx (filter: {slug: {regex: \"/^guests\\/(2021|2022)/\"}}) {\n              nodes {\n                id\n                frontmatter {\n                  template\n                  slug\n                  name\n                }\n                slug\n              }\n            }\n          }\n        `)\n\n\n    const guestsByYear = data.allMdx.nodes.filter(a => a?.frontmatter?.template === 'guest').reduce((prev, curr) => {\n        const thisYear = curr.slug.split('/')[1]\n        let theYear = prev.findIndex(year => year.year === thisYear);\n        const niceName = curr.frontmatter.name\n        if (theYear === -1) {\n            theYear = prev.push({year: thisYear, guests: [niceName]})\n        } else {\n            prev[theYear].guests.push(niceName)\n        }\n        return prev\n    }, []).reverse()\n\n    return (\n        <Layout>\n            <Seo title=\"Prior Guests\" />\n\n            <PageHeader\n                title=\"Prior Guests\"\n            />\n\n            <PageContent>\n                    {guestsByYear.map(year => (<div key={year.year}>\n                        <h2><CenteredBox>* {year.year} *</CenteredBox></h2>\n                        <Grid container style={{ justifyContent: 'space-around' }}>\n                            {year.guests.map(guest => (<Avatar key={guest} personName={guest} year={year.year} showLink={true} />))}\n                        </Grid>\n                        <br />\n                        <br />\n                    </div>))}\n            </PageContent>\n        </Layout>\n    )\n}\n\nexport default PriorGuestsPage\n"],"sourceRoot":""}